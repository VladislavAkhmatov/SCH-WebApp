from telegram import Update, ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
import secrets
import requests
# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    keyboard = [[KeyboardButton("üì± –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", request_contact=True)]]
    reply_markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)

    await update.message.reply_text("–î–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:", reply_markup=reply_markup)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
import requests

async def contact_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    contact = update.message.contact
    phone_number = contact.phone_number

    if phone_number.startswith("+7"):
        phone_number = "8" + phone_number[2:]
    elif phone_number.startswith("7"):
        phone_number = "8" + phone_number[1:]

    # –ó–∞–ø—Ä–æ—Å —Ç–æ–∫–µ–Ω–∞ —É —Å–µ—Ä–≤–µ—Ä–∞
    try:
        response = requests.post("https://5fd2-213-232-244-22.ngrok-free.app/generate-token.php", json={"login": phone_number}, timeout=5)

        if response.status_code != 200:
            await update.message.reply_text(f"–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {response.status_code}")
            return

        try:
            data = response.json()
        except requests.exceptions.JSONDecodeError:
            await update.message.reply_text("–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON-–æ—Ç–≤–µ—Ç")
            return

        token = data.get("token")
        if not token:
            await update.message.reply_text("–û—à–∏–±–∫–∞: —Ç–æ–∫–µ–Ω –Ω–µ –ø–æ–ª—É—á–µ–Ω")
            return

        web_app_url = f"https://5fd2-213-232-244-22.ngrok-free.app/auth.php?token={token}"
        keyboard = [[InlineKeyboardButton("üîë –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ WebApp", web_app=WebAppInfo(url=web_app_url))]]
        reply_markup = InlineKeyboardMarkup(keyboard)

        await update.message.reply_text(f"–í–∞—à –Ω–æ–º–µ—Ä: {phone_number}\n\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –≤—Ö–æ–¥–∞:", reply_markup=reply_markup)

    except requests.exceptions.RequestException as e:
        await update.message.reply_text(f"–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {str(e)}")
# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
def main() -> None:
    application = Application.builder().token("7209804074:AAHD2anxD8XBdCSpF-QpCZZiZZwn5YIk_t0").build()
    
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.CONTACT, contact_handler))  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞
    
    application.run_polling()

if __name__ == "__main__":
    main()
